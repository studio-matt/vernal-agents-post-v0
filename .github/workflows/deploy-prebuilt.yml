name: Deploy Agents (Pre-built Docker Image)

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  build-and-deploy:
    name: Build Pre-built Image and Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Build pre-built Docker image
      run: |
        echo "🐳 Building pre-built Docker image with ALL dependencies..."
        docker build -f Dockerfile.prebuilt -t vernal-agents:prebuilt .
        echo "✅ Pre-built image created successfully"
        
    - name: Deploy pre-built image
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.AGENTS_EC2_SSH_KEY }}
        passphrase: ${{ secrets.EC2_SSH_PASSPHRASE }}
        script: |
          set -e
          echo "🐳 PRE-BUILT DOCKER DEPLOYMENT STARTING..."
          
          # 1. Stop existing services
          echo "🛑 Stopping existing services..."
          sudo systemctl stop vernal-agents || true
          docker stop vernal-agents-container || true
          docker rm vernal-agents-container || true
          
          # 2. Setup swap space
          echo "💾 Setting up swap space..."
          if ! swapon --show | grep -q "/swapfile"; then
            sudo fallocate -l 8G /swapfile
            sudo chmod 600 /swapfile
            sudo mkswap /swapfile
            sudo swapon /swapfile
            echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
          fi
          echo "✅ Swap space configured:"
          free -h
          
          # 3. Pull latest code
          echo "📦 Pulling latest code..."
          cd /home/ubuntu
          rm -rf vernal-agents-post-v0
          git clone https://github.com/studio-matt/vernal-agents-post-v0.git vernal-agents-post-v0
          cd vernal-agents-post-v0
          
          # 4. Build pre-built Docker image (dependencies already installed)
          echo "🐳 Building pre-built Docker image..."
          docker build -f Dockerfile.prebuilt -t vernal-agents:prebuilt .
          
          # 5. Run container with maximum memory allocation
          echo "🚀 Starting container with maximum memory..."
          docker run -d \
            --name vernal-agents-container \
            --restart unless-stopped \
            -p 8000:8000 \
            --memory=8g \
            --memory-swap=12g \
            -e DB_HOST="$DB_HOST" \
            -e DB_USER="$DB_USER" \
            -e DB_PASSWORD="$DB_PASSWORD" \
            -e DB_NAME="$DB_NAME" \
            -e PYTHONPATH="/app" \
            vernal-agents:prebuilt
          
          # 6. Wait for container to start
          echo "⏳ Waiting for container to start..."
          sleep 30
          
          # 7. Health check
          echo "🔍 Health check..."
          for i in {1..30}; do
            if curl -f http://localhost:8000/health > /dev/null 2>&1; then
              echo "✅ Container is healthy"
              break
            fi
            echo "⏳ Waiting for health check... (attempt $i/30)"
            sleep 2
          done
          
          if ! curl -f http://localhost:8000/health > /dev/null 2>&1; then
            echo "❌ Container health check failed!"
            docker logs vernal-agents-container
            exit 1
          fi
          
          # 8. Test external access
          echo "🔍 Testing external access..."
          curl -f https://themachine.vernalcontentum.com/health || { echo "❌ External health check failed!"; exit 1; }
          
          # 9. Write completion marker
          COMMIT_HASH=$(git rev-parse HEAD)
          echo "DEPLOY_COMPLETE_$(date +%s)_$COMMIT_HASH" > /home/ubuntu/vernal_agents_deploy_complete.txt
          
          echo "🎉 PRE-BUILT DOCKER DEPLOYMENT SUCCESSFUL!"
          echo "🔗 Commit: $COMMIT_HASH"
          echo "🐳 Container: vernal-agents-container"
          echo "💾 Memory: 8GB allocated + 8GB swap"
          echo "📊 Final memory status:"
          free -h
