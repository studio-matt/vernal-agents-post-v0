# Pre-built Docker image with ALL dependencies already installed
# This eliminates the need for pip install during deployment
FROM python:3.11-slim

# Set memory limits and optimization
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    htop \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements files
COPY requirements-core.txt .
COPY requirements-ai.txt .
COPY requirements-remaining.txt .

# Install ALL dependencies in chunks with memory monitoring
RUN echo "ðŸ“Š Memory before install:" && free -h && \
    pip install --upgrade pip && \
    echo "ðŸ“¦ Installing core dependencies..." && \
    pip install -r requirements-core.txt --no-cache-dir && \
    echo "ðŸ“Š Memory after core:" && free -h && \
    echo "ðŸ“¦ Installing AI dependencies..." && \
    pip install -r requirements-ai.txt --no-cache-dir && \
    echo "ðŸ“Š Memory after AI:" && free -h && \
    echo "ðŸ“¦ Installing remaining dependencies..." && \
    pip install -r requirements-remaining.txt --no-cache-dir && \
    echo "ðŸ“Š Memory after all:" && free -h && \
    pip cache purge && \
    echo "âœ… All dependencies installed successfully"

# Copy application code
COPY . .

# Set environment variables
ENV PYTHONPATH="/app:$PYTHONPATH"

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
