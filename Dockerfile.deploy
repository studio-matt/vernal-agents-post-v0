# Dockerfile for high-memory deployment
FROM python:3.11-slim

# Set memory limits and optimization
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements files (requirements.in is now used to generate locked)
COPY requirements.in .

# Generate locked requirements with lower bounds (prevents resolution-too-deep)
# CRITICAL: Force pip<25.0 for pip-tools compatibility (pip-tools 7.x doesn't support pip 25.x)
# CRITICAL: Upgrade pip-tools to >=7.4.0 for pip 24.x compatibility  
# CRITICAL: Install pip-tools FIRST, then upgrade pip, then run pip-compile
# CRITICAL: Use python -m piptools to ensure we use the installed version, not old global binary
RUN pip install --upgrade "pip-tools>=7.4.0" && \
    pip install "pip<25.0" setuptools wheel && \
    python -m piptools compile requirements.in --output-file requirements-locked.txt && \
    pip install -r requirements-locked.txt --no-cache-dir

# Copy application code
COPY . .

# Set environment variables
ENV PYTHONPATH="/app"

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
